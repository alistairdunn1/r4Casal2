library(devtools)
library(roxygen2)
document()
setwd("C://Software//r4Casal2//R"
)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
getwd()
setwd("C:/Users/marshc/OneDrive - NIWA/22_23/SNA1/R")
recruit_df = get_BH_recruitment(model)
head(recruit_df)
report_label = NULL
recruit_df = get_BH_recruitment(model)
if(!is.null(report_label)) {
recruit_df = subset(recruit_df, subset = label %in% report_label)
}
ggplot(recruit_df, aes_string(x = "year", y = quantity, col = "model_label", linetype = "model_label")) +
geom_line(size = 1.5) +
labs(colour="Model", linetype = "Model", x = "Years", y = quantity) +
facet_wrap(~fishery)
quantity = "ycs_values"
recruit_df = get_BH_recruitment(model)
if(!is.null(report_label)) {
recruit_df = subset(recruit_df, subset = label %in% report_label)
}
ggplot(recruit_df, aes_string(x = "year", y = quantity, col = "model_label", linetype = "model_label")) +
geom_line(size = 1.5) +
labs(colour="Model", linetype = "Model", x = "Years", y = quantity) +
facet_wrap(~fishery)
ggplot(recruit_df, aes_string(x = "year", y = quantity, col = "model_label", linetype = "model_label")) +
geom_line(size = 1.5) +
labs(colour="Model", linetype = "Model", x = "Years", y = quantity) +
facet_wrap(~label)
ggplot(recruit_df, aes_string(x = "ycs_years", y = quantity, col = "model_label", linetype = "model_label")) +
geom_line(size = 1.5) +
labs(colour="Model", linetype = "Model", x = "YCS years", y = quantity) +
facet_wrap(~label)
setwd("C://Software//r4Casal2//R")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
devtools::install()
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
library(r4Casal2)
document()
## build bookdown locally
bookdown::render_book(input = "GitBook/")
getwd()
setwd("..")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
getwd()
generate.starting.pars
r4Casal2::generate.starting.pars
Casal2::generate.starting.pars
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
## build bookdown locally
bookdown::render_book(input = "GitBook/")
this_report = model[[i]]
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
randtests
library(randtests)
install.packages("randtests")
randtests::runs.test
?randtests::runs.test
test = "greater"
!test %in% c("less","greater","two.sided")
test = "greater23"
!test %in% c("less","greater","two.sided")
runs_test_resid <- function(x, test, plot.it = FALSE) {
if(!test %in% c("less","greater","two.sided"))
stop('test must be one of c("less","greater","two.sided")')
# Average moving range
mr  <- abs(diff(x - mu))
amr <- mean(mr, na.rm = TRUE)
# Upper limit for moving ranges
ulmr <- 3.267 * amr
# Remove moving ranges greater than ulmr and recalculate amr, Nelson 1982
mr  <- mr[mr < ulmr]
amr <- mean(mr, na.rm = TRUE)
# Calculate standard deviation, Montgomery, 6.33
stdev <- amr / 1.128
# Calculate control limits
lcl <- mu - 2.66  * stdev
ucl <- mu + 2.66  * stdev
if(nlevels(factor(sign(x)))>1) {
# Make the runs test non-parametric
runstest = runs.test(x,threshold = 0, alternative = test, plot = F)
if(is.na(runstest$p.value)) p.value =0.001
pvalue = round(runstest$p.value,3)} else {
pvalue = 0.001
}
return(list(sig3lim=c(lcl,ucl),p.runs= pvalue))
}
runs_test_residuals <- function(x, test) {
if(!test %in% c("less","greater","two.sided"))
stop('test must be one of c("less","greater","two.sided")')
# Average moving range
mr  <- abs(diff(x - mu))
amr <- mean(mr, na.rm = TRUE)
# Upper limit for moving ranges
ulmr <- 3.267 * amr
# Remove moving ranges greater than ulmr and recalculate amr, Nelson 1982
mr  <- mr[mr < ulmr]
amr <- mean(mr, na.rm = TRUE)
# Calculate standard deviation, Montgomery, 6.33
stdev <- amr / 1.128
# Calculate control limits
lcl <- mu - 2.66  * stdev
ucl <- mu + 2.66  * stdev
if(nlevels(factor(sign(x)))>1) {
# Make the runs test non-parametric
runstest = runs.test(x,threshold = 0, alternative = test, plot = F)
if(is.na(runstest$p.value)) p.value =0.001
pvalue = round(runstest$p.value,3)} else {
pvalue = 0.001
}
return(list(sig3lim=c(lcl,ucl),p.runs= pvalue))
}
#'
#' @importFrom randtests runs.test
#' @details for mean age or length residuals we suggest you use the residuals from the from the logged values.
#' H0: The order of the data is random
#' HA|two.sided: The order of the data is not random
#' HA|right.sided: a trend
#' HA|greater: a first order negative serial correlation
#'
#' @rdname runs_test_residuals
#' @export runs_test_residuals
runs_test_residuals <- function(x, test = "two.sided") {
if(!test %in% c("less","greater","two.sided"))
stop('test must be one of c("left.sided","greater","two.sided")')
# Average moving range
mu = 0
mr  <- abs(diff(x - mu))
amr <- mean(mr, na.rm = TRUE)
# Upper limit for moving ranges
ulmr <- 3.267 * amr
# Remove moving ranges greater than ulmr and recalculate amr, Nelson 1982
mr  <- mr[mr < ulmr]
amr <- mean(mr, na.rm = TRUE)
# Calculate standard deviation, Montgomery, 6.33
stdev <- amr / 1.128
# Calculate control limits
lcl <- mu - 2.66  * stdev
ucl <- mu + 2.66  * stdev
if(nlevels(factor(sign(x)))>1) {
# Make the runs test non-parametric
runstest = runs.test(x,threshold = 0, alternative = test, plot = F)
if(is.na(runstest$p.value)) p.value =0.001
pvalue = round(runstest$p.value,3)} else {
pvalue = 0.001
}
return(list(siglim=c(lcl,ucl),p.runs= pvalue))
}
runs_test_residuals <- function(x, test = "two.sided") {
if(!test %in% c("left.sided","right.sided","two.sided"))
stop('test must be one of c("left.sided","right.sided","two.sided")')
# Average moving range
mu = 0
mr  <- abs(diff(x - mu))
amr <- mean(mr, na.rm = TRUE)
# Upper limit for moving ranges
ulmr <- 3.267 * amr
# Remove moving ranges greater than ulmr and recalculate amr, Nelson 1982
mr  <- mr[mr < ulmr]
amr <- mean(mr, na.rm = TRUE)
# Calculate standard deviation, Montgomery, 6.33
stdev <- amr / 1.128
# Calculate control limits
lcl <- mu - 2.66  * stdev
ucl <- mu + 2.66  * stdev
if(nlevels(factor(sign(x)))>1) {
# Make the runs test non-parametric
runstest = runs.test(x,threshold = 0, alternative = test, plot = F)
if(is.na(runstest$p.value)) p.value =0.001
pvalue = round(runstest$p.value,3)} else {
pvalue = 0.001
}
return(list(siglim=c(lcl,ucl),p.runs= pvalue))
}
max_age_ndx = which.max(this_obs$age)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
devtools::install()
library(r4Casal2)
r4Casal2::summarise_estimated_parameters()
?summarise_estimated_parameters
rm(summarise_estimated_parameters)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
?UseMethod
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document()
library(r4Casal2)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
(sapply(strsplit(names(parameter_label), split = "\\["), "[", 2))
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
library(r4Casal2)
.libPaths()
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
library(r4Casal2)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
this_report$type != "estimate_value"
library(r4Casal2)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
mpd = NULL
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
## build bookdown locally
bookdown::render_book(input = "GitBook/")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
getwd()
## build bookdown locally
bookdown::render_book(input = "GitBook/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
part = c(1000, 900, 800 ,700 ,600 ,500, 400, 700)
part * (1 - exp(-0.5))
exp(-0.5)
(1 - exp(-0.5)
(1 - exp(-0.5))
1000 * 0.3934693
part * ( exp(-0.5))
part * exp(-0.5)^10
part * exp(-0.5)^10
part * exp(-0.5)^8
part * exp(-0.5)^7
log(1/(1:200))
plot(log((1:200),log(1/(1:200)))
)
plot((1:200),log(1/(1:200)))
length(1900:1995)
1996:2015
length((1996:2015)
length((1996:2015))
length(2016:2021)
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
library(r4Casal2)
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
#build()
#devtools::install()
## devtools::check() doesn't like how we have put Casal2 in the Suggests:
testthat::test_dir("tests/testthat/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
#build()
#devtools::install()
## devtools::check() doesn't like how we have put Casal2 in the Suggests:
testthat::test_dir("tests/testthat/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
#build()
#devtools::install()
## devtools::check() doesn't like how we have put Casal2 in the Suggests:
testthat::test_dir("tests/testthat/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
#build()
#devtools::install()
## devtools::check() doesn't like how we have put Casal2 in the Suggests:
testthat::test_dir("tests/testthat/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
#build()
#devtools::install()
## devtools::check() doesn't like how we have put Casal2 in the Suggests:
testthat::test_dir("tests/testthat/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
stop("tab_objects must be a list of more than one object of class 'casal2TAB'")
# build package
# this builds all the help files
library(devtools)
library(roxygen2)
document();
#build()
#devtools::install()
## devtools::check() doesn't like how we have put Casal2 in the Suggests:
testthat::test_dir("tests/testthat/")
## build bookdown locally
bookdown::render_book(input = "GitBook/")
